<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="feedDAO">
	<!-- 메인피드 불러올 때 총 게시물 갯수 -->
	<select id="getTotalCount" resultType="int" parameterType="String">
	SELECT COUNT(F_IDX) FROM
	(SELECT F.F_IDX
  	FROM FEED F, FOLLOWER FO
 	WHERE F.U_ID = FO.TO_ID
   	AND FO.FROM_ID = #{u_id}
UNION
	SELECT F.F_IDX
  	FROM FEED F
 	WHERE F.U_ID = #{u_id})
	</select>
	<!-- 팔로워 게시물과 내 게시물 메인피드에 띄우기 -->
	<select id="getFollowingFeedList" resultType="feed" parameterType="map">
	SELECT * FROM (
		SELECT ROWNUM R_NUM, F_IDX, REGDATE, CONTENT, U_ID, F_PIC, U_PIC
		FROM 	(
				SELECT F.F_IDX, F.REGDATE, F.CONTENT, U.U_ID, F.F_PIC, U.U_PIC
				  FROM FEED F, USER_INFO U, FOLLOWER FO
				 WHERE F.U_ID = U.U_ID
				   AND U.U_ID = FO.TO_ID
				   AND FO.FROM_ID = #{u_id}
				UNION
				SELECT F.F_IDX, F.REGDATE, F.CONTENT, F.U_ID, F.F_PIC, (SELECT U_PIC
		                                                          FROM USER_INFO
		                                                         WHERE U_ID = #{u_id})
				  FROM FEED F
				 WHERE F.U_ID = #{u_id}
				 ORDER BY F_IDX DESC))
	 WHERE R_NUM BETWEEN #{begin} AND #{end}
	 ORDER BY R_NUM
	</select>
	
	<select id="oneFeed" resultType="feed" parameterType="int">
		SELECT F.F_IDX, F.REGDATE, F.CONTENT, F.U_ID, F.F_PIC, U.U_PIC
		  FROM FEED F, USER_INFO U
		 WHERE F.U_ID = U.U_ID
		   AND F.F_IDX = #{f_idx}
	</select>
	
	<!-- 개인 상세 페이지 불러오기 -->
  	<select id="getMyFeedList" resultType="feed" parameterType="user">
  		SELECT F_IDX, REGDATE, CONTENT, U_ID, F_PIC
  		  FROM FEED
  		 WHERE U_ID = #{u_id}
  		 ORDER BY F_IDX DESC
  	</select>
  	
  	<!-- 게시물 등록 -->
  	<insert id="insertFeed" parameterType="feed">
  		INSERT INTO FEED (f_idx, regdate, f_pic, content, u_id)
		    VALUES((SELECT NVL(MAX(F_IDX), 0) + 1 FROM FEED), TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS'), #{f_pic}, #{content}, #{u_id})
  	</insert>
  	
  	<!-- 게시물 수정 -->
  	<update id="updateFeed" parameterType="feed">
  		UPDATE FEED
  		   SET CONTENT = #{content}
  		 WHERE F_IDX = #{f_idx}
  	</update>
  	
	<!-- 좋아요 상태 확인 -->
	<select id="confirmLike" resultType="int" parameterType="String">
		SELECT F_IDX
		  FROM LIKE_LIST
		 WHERE U_ID = #{u_id}
	</select>
	
  	<!-- 좋아요 등록 -->
  	<insert id="insertLike" parameterType="like">
  		INSERT INTO LIKE_LIST (L_IDX, F_IDX, U_ID)
   			VALUES ((SELECT NVL(MAX(L_IDX), 0) + 1 FROM LIKE_LIST), #{f_idx}, #{u_id})
  	</insert>
  	
  	<!-- 좋아요 삭제 -->
  	<delete id="deleteLike" parameterType="like">
  		DELETE FROM LIKE_LIST
  		 WHERE F_IDX = #{f_idx}
  		   AND U_ID = #{u_id}
  	</delete>
  	
  	<!-- 좋아요 갯수 -->
  	<select id="countLike" resultType="int" parameterType="int">
  		SELECT COUNT(L_IDX)
  		  FROM LIKE_LIST
  		 WHERE F_IDX = #{f_idx}
  	</select>
  	
  	<!-- 내가 팔로우 한 리스트 -->
  	<select id="getFollowingList" resultType="follower" parameterType="String">
  		SELECT ER_IDX, TO_ID, FROM_ID
  		  FROM FOLLOWER
  		 WHERE FROM_ID = #{u_id}
  	</select>
  	
  	<!-- 나를 팔로우 한 리스트 -->
  	<select id="getFollowerList" resultType="follower" parameterType="String">
  		SELECT ER_IDX, TO_ID, FROM_ID
  		  FROM FOLLOWER
  		 WHERE TO_ID = #{u_id}
  	</select>
  	
  	<!-- 즐겨찾기 등록 -->
  	<insert id="saveFeed" parameterType="map">
  		INSERT INTO SAVED
   		 VALUES(#{f_idx}, #{u_id}, (SELECT NVL(MAX(SAVED_IDX), 0) + 1 FROM SAVED))
  	</insert>
  	<!-- 즐겨찾기 해제 -->
  	<delete id="unSaveFeed" parameterType="map">
  		DELETE FROM SAVED
   		 WHERE F_IDX = #{f_idx}
   		   AND U_ID = #{u_id}
  	</delete>
  	
  	<!-- 즐겨찾기 한 게시물 리스트 -->
  	<select id="saveFeedList" resultType="feed" parameterType="String">
  		SELECT F.F_IDX, F.REGDATE, F.CONTENT, F.U_ID, F.F_PIC, U.U_PIC
		  FROM FEED F, SAVED S, USER_INFO U
		 WHERE F.F_IDX = S.F_IDX
		   AND F.U_ID = U.U_ID
		   AND S.U_ID = #{u_id}
		ORDER BY SAVED_IDX DESC
  	</select>
  	
  	<delete id="unFollow" parameterType="map">
  		DELETE FROM FOLLOWER
  		WHERE FROM_ID=#{my_id} AND TO_ID=#{target_id}
  	</delete>
  	
  	<insert id="follow" parameterType="map">
  		INSERT INTO FOLLOWER (ER_IDX, TO_ID, FROM_ID)
  		VALUES((SELECT NVL(MAX(ER_IDX), 0) + 1 FROM FOLLOWER), #{target_id}, #{my_id})
  	</insert>
  	
  	<delete id="deleteFeeds" parameterType="String">
  		DELETE FROM FEED
  		WHERE U_ID = #{u_id}
  	</delete>
  	<delete id="deleteFeed" parameterType="int">
  		DELETE FROM FEED
  		WHERE F_IDX = #{f_idx}
  	</delete>
  	
  	<delete id="deleteFollow" parameterType="String">
  		DELETE FROM FOLLOWER
  		WHERE TO_ID = #{u_id} OR FROM_ID = #{u_id}
  	</delete>
  	
  	<delete id="deleteLikes" parameterType="String">
  		DELETE FROM LIKE_LIST
  		WHERE U_ID = #{u_id}
  	</delete>
  	
  	<delete id="deleteSaves" parameterType="String">
  		DELETE FROM SAVED
  		WHERE U_ID = #{u_id}
  	</delete>
</mapper>


